apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.trustathanas.absaclone"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    dataBinding.enabled = true

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    /** databingdin libraries **/
    kapt "com.android.databinding:compiler:3.2.0-alpha10"
//    kapt 'com.android.databinding:compiler:3.1.4'


    /**Architecture components */
    implementation 'androidx.room:room-runtime:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'


    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0-alpha04'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0-alpha04'
//    implementation "com.google.android.material:material:1.0.0"

    /** RxJava and RxKotlin libraries*/
    // RxAndroid
    def rxandroid_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    // RxJava
    def rxjava_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    def reactivestreams_version = "1.1.1"
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.0.0'

    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"


    def rxkotlin_version = '2.3.0'
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"

    /**Dagger Dependency Injection core and android*/
    def dagger_version = "2.26"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    /**Co-routine library*/
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.27.0-eap13"


    // Rx Binding Library
    def rxbinding_version = "3.0.0-alpha2"
    implementation "com.jakewharton.rxbinding3:rxbinding:$rxbinding_version"

    // Rx-Retrofit Call Adapter
    def rxcalladapter_version = '2.5.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxcalladapter_version"

    /** Square libraries */
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    /** testing libraries */
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.1"

    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.3.1"

    // (Optional) If you also have JUnit 4-based tests
    testImplementation "junit:junit:4.12"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.3.1"

    // mockk.io mocking library designed for Kotlin
//    androidTestImplementation "io.mockk:mockk-android:1.9.3"
//    testImplementation "io.mockk:mockk:1.9.3"

    /** mockito library */
    testImplementation "org.mockito:mockito-core:2.28.2"

    /** mockito nhaarman */
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"


    // robolectric framework
    testImplementation 'org.robolectric:robolectric:4.3'

    // hamcrest testing library
    testImplementation "org.hamcrest:hamcrest:2.1"

//    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}
